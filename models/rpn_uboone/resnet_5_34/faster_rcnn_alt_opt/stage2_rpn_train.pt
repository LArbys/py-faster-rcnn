name: "resnet_5_34_rpn_STAGE"
layer {
  name: 'input-data'
    type: 'Python'
    top: 'data'
    top: 'im_info'
    top: 'gt_boxes'
    python_param {
    module: 'roi_data_layer.layer'
      layer: 'RoIDataLayer'
      param_str: "'num_classes': 6"
      }
}
 

layer {
  name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 3
      kernel_size: 7
      stride: 2
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "conv1_bn"
    type: "BatchNorm"
    bottom: "conv1"
    top: "conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "conv1_scale"
    type: "Scale"
    bottom: "conv1"
    top: "conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "conv1_relu"
    type: "ReLU"
    bottom: "conv1"
    top: "conv1"
    }
layer {
  name: "pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param {
    pool: MAX
      kernel_size: 3
      stride: 2
      }
}
layer {
  name: "res1_bn"
    type: "BatchNorm"
    bottom: "pool1"
    top: "res1_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res1_scale"
    type: "Scale"
    bottom: "res1_bn"
    top: "res1_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res1_relu"
    type: "ReLU"
    bottom: "res1_bn"
    top: "res1_bn"
    }
layer {
  name: "res1_conv1"
    type: "Convolution"
    bottom: "res1_bn"
    top: "res1_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res1_conv1_bn"
    type: "BatchNorm"
    bottom: "res1_conv1"
    top: "res1_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res1_conv1_scale"
    type: "Scale"
    bottom: "res1_conv1"
    top: "res1_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res1_conv1_relu"
    type: "ReLU"
    bottom: "res1_conv1"
    top: "res1_conv1"
    }
layer {
  name: "res1_conv2"
    type: "Convolution"
    bottom: "res1_conv1"
    top: "res1_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res1_match_conv"
    type: "Convolution"
    bottom: "pool1"
    top: "res1_match_conv"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 0
      kernel_size: 1
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0.2
	}
  }
}
layer {
  name: "res1_match_bn"
    type: "BatchNorm"
    bottom: "res1_match_conv"
    top: "res1_match_conv"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res1_match_scale"
    type: "Scale"
    bottom: "res1_match_conv"
    top: "res1_match_conv"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res1_eletwise"
    type: "Eltwise"
    bottom: "res1_match_conv"
    bottom: "res1_conv2"
    top: "res1_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res2_bn"
    type: "BatchNorm"
    bottom: "res1_eletwise"
    top: "res2_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale1"
    type: "Scale"
    bottom: "res2_bn"
    top: "res2_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res2_relu"
    type: "ReLU"
    bottom: "res2_bn"
    top: "res2_bn"
    }
layer {
  name: "res2_conv1"
    type: "Convolution"
    bottom: "res2_bn"
    top: "res2_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res2_conv1_bn"
    type: "BatchNorm"
    bottom: "res2_conv1"
    top: "res2_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res2_conv1_scale"
    type: "Scale"
    bottom: "res2_conv1"
    top: "res2_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res2_conv1_relu"
    type: "ReLU"
    bottom: "res2_conv1"
    top: "res2_conv1"
    }
layer {
  name: "res2_conv2"
    type: "Convolution"
    bottom: "res2_conv1"
    top: "res2_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res2_eletwise"
    type: "Eltwise"
    bottom: "res1_eletwise"
    bottom: "res2_conv2"
    top: "res2_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res3_bn"
    type: "BatchNorm"
    bottom: "res2_eletwise"
    top: "res3_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale2"
    type: "Scale"
    bottom: "res3_bn"
    top: "res3_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res3_relu"
    type: "ReLU"
    bottom: "res3_bn"
    top: "res3_bn"
    }
layer {
  name: "res3_conv1"
    type: "Convolution"
    bottom: "res3_bn"
    top: "res3_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res3_conv1_bn"
    type: "BatchNorm"
    bottom: "res3_conv1"
    top: "res3_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res3_conv1_scale"
    type: "Scale"
    bottom: "res3_conv1"
    top: "res3_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res3_conv1_relu"
    type: "ReLU"
    bottom: "res3_conv1"
    top: "res3_conv1"
    }
layer {
  name: "res3_conv2"
    type: "Convolution"
    bottom: "res3_conv1"
    top: "res3_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 64
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res3_eletwise"
    type: "Eltwise"
    bottom: "res2_eletwise"
    bottom: "res3_conv2"
    top: "res3_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res4_bn"
    type: "BatchNorm"
    bottom: "res3_eletwise"
    top: "res4_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res4_scale"
    type: "Scale"
    bottom: "res4_bn"
    top: "res4_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res4_relu"
    type: "ReLU"
    bottom: "res4_bn"
    top: "res4_bn"
    }
layer {
  name: "res4_conv1"
    type: "Convolution"
    bottom: "res4_bn"
    top: "res4_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 2
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res4_conv1_bn"
    type: "BatchNorm"
    bottom: "res4_conv1"
    top: "res4_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res4_conv1_scale"
    type: "Scale"
    bottom: "res4_conv1"
    top: "res4_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res4_conv1_relu"
    type: "ReLU"
    bottom: "res4_conv1"
    top: "res4_conv1"
    }
layer {
  name: "res4_conv2"
    type: "Convolution"
    bottom: "res4_conv1"
    top: "res4_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res4_match_conv"
  type: "Convolution"
  bottom: "res3_eletwise"
  top: "res4_match_conv"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 2
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "res4_match_bn"
  type: "BatchNorm"
  bottom: "res4_match_conv"
  top: "res4_match_conv"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res4_match_scale"
  type: "Scale"
  bottom: "res4_match_conv"
  top: "res4_match_conv"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res4_eletwise"
  type: "Eltwise"
  bottom: "res4_match_conv"
  bottom: "res4_conv2"
  top: "res4_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res5_bn"
  type: "BatchNorm"
  bottom: "res4_eletwise"
  top: "res5_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale3"
  type: "Scale"
  bottom: "res5_bn"
  top: "res5_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_relu"
  type: "ReLU"
  bottom: "res5_bn"
  top: "res5_bn"
}
layer {
  name: "res5_conv1"
  type: "Convolution"
  bottom: "res5_bn"
  top: "res5_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5_conv1_bn"
  type: "BatchNorm"
  bottom: "res5_conv1"
  top: "res5_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res5_conv1_scale"
  type: "Scale"
  bottom: "res5_conv1"
  top: "res5_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res5_conv1_relu"
  type: "ReLU"
  bottom: "res5_conv1"
  top: "res5_conv1"
}
layer {
  name: "res5_conv2"
  type: "Convolution"
  bottom: "res5_conv1"
  top: "res5_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5_eletwise"
  type: "Eltwise"
  bottom: "res4_eletwise"
  bottom: "res5_conv2"
  top: "res5_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res6_bn"
  type: "BatchNorm"
  bottom: "res5_eletwise"
  top: "res6_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale4"
  type: "Scale"
  bottom: "res6_bn"
  top: "res6_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res6_relu"
  type: "ReLU"
  bottom: "res6_bn"
  top: "res6_bn"
}
layer {
  name: "res6_conv1"
  type: "Convolution"
    bottom: "res6_bn"
    top: "res6_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res6_conv1_bn"
    type: "BatchNorm"
    bottom: "res6_conv1"
    top: "res6_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res6_conv1_scale"
    type: "Scale"
    bottom: "res6_conv1"
    top: "res6_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res6_conv1_relu"
    type: "ReLU"
    bottom: "res6_conv1"
    top: "res6_conv1"
    }
layer {
  name: "res6_conv2"
    type: "Convolution"
    bottom: "res6_conv1"
    top: "res6_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res6_eletwise"
    type: "Eltwise"
    bottom: "res5_eletwise"
    bottom: "res6_conv2"
    top: "res6_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res7_bn"
    type: "BatchNorm"
    bottom: "res6_eletwise"
    top: "res7_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale5"
    type: "Scale"
    bottom: "res7_bn"
    top: "res7_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res7_relu"
    type: "ReLU"
    bottom: "res7_bn"
    top: "res7_bn"
    }
layer {
  name: "res7_conv1"
    type: "Convolution"
    bottom: "res7_bn"
    top: "res7_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res7_conv1_bn"
    type: "BatchNorm"
    bottom: "res7_conv1"
    top: "res7_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res7_conv1_scale"
    type: "Scale"
    bottom: "res7_conv1"
    top: "res7_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res7_conv1_relu"
    type: "ReLU"
    bottom: "res7_conv1"
    top: "res7_conv1"
    }
layer {
  name: "res7_conv2"
    type: "Convolution"
    bottom: "res7_conv1"
    top: "res7_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 128
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res7_eletwise"
    type: "Eltwise"
    bottom: "res6_eletwise"
    bottom: "res7_conv2"
    top: "res7_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res8_bn"
    type: "BatchNorm"
    bottom: "res7_eletwise"
    top: "res8_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res8_scale"
    type: "Scale"
    bottom: "res8_bn"
    top: "res8_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res8_relu"
    type: "ReLU"
    bottom: "res8_bn"
    top: "res8_bn"
    }
layer {
  name: "res8_conv1"
    type: "Convolution"
    bottom: "res8_bn"
    top: "res8_conv1"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 256
      pad: 1
      kernel_size: 3
      stride: 2
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res8_conv1_bn"
    type: "BatchNorm"
    bottom: "res8_conv1"
    top: "res8_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res8_conv1_scale"
    type: "Scale"
    bottom: "res8_conv1"
    top: "res8_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res8_conv1_relu"
    type: "ReLU"
    bottom: "res8_conv1"
    top: "res8_conv1"
    }
layer {
  name: "res8_conv2"
    type: "Convolution"
    bottom: "res8_conv1"
    top: "res8_conv2"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 256
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res8_match_conv"
    type: "Convolution"
    bottom: "res7_eletwise"
    top: "res8_match_conv"
    param {
    lr_mult: 0
      decay_mult: 1
      }
  param {
    lr_mult: 0
      decay_mult: 0
      }
  convolution_param {
    num_output: 256
      pad: 0
      kernel_size: 1
      stride: 2
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0.2
	}
  }
}
layer {
  name: "res8_match_bn"
    type: "BatchNorm"
    bottom: "res8_match_conv"
    top: "res8_match_conv"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res8_match_scale"
    type: "Scale"
    bottom: "res8_match_conv"
    top: "res8_match_conv"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res8_eletwise"
    type: "Eltwise"
    bottom: "res8_match_conv"
    bottom: "res8_conv2"
    top: "res8_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res9_bn"
    type: "BatchNorm"
    bottom: "res8_eletwise"
    top: "res9_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale6"
    type: "Scale"
    bottom: "res9_bn"
    top: "res9_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res9_relu"
  type: "ReLU"
  bottom: "res9_bn"
  top: "res9_bn"
}
layer {
  name: "res9_conv1"
  type: "Convolution"
  bottom: "res9_bn"
  top: "res9_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res9_conv1_bn"
  type: "BatchNorm"
  bottom: "res9_conv1"
  top: "res9_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res9_conv1_scale"
  type: "Scale"
  bottom: "res9_conv1"
  top: "res9_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res9_conv1_relu"
  type: "ReLU"
  bottom: "res9_conv1"
  top: "res9_conv1"
}
layer {
  name: "res9_conv2"
  type: "Convolution"
  bottom: "res9_conv1"
  top: "res9_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res9_eletwise"
  type: "Eltwise"
  bottom: "res8_eletwise"
  bottom: "res9_conv2"
  top: "res9_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res10_bn"
  type: "BatchNorm"
  bottom: "res9_eletwise"
  top: "res10_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale7"
  type: "Scale"
  bottom: "res10_bn"
  top: "res10_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res10_relu"
  type: "ReLU"
  bottom: "res10_bn"
  top: "res10_bn"
}
layer {
  name: "res10_conv1"
  type: "Convolution"
  bottom: "res10_bn"
  top: "res10_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res10_conv1_bn"
  type: "BatchNorm"
  bottom: "res10_conv1"
  top: "res10_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res10_conv1_scale"
  type: "Scale"
  bottom: "res10_conv1"
  top: "res10_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res10_conv1_relu"
  type: "ReLU"
  bottom: "res10_conv1"
  top: "res10_conv1"
}
layer {
  name: "res10_conv2"
  type: "Convolution"
  bottom: "res10_conv1"
  top: "res10_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res10_eletwise"
  type: "Eltwise"
  bottom: "res9_eletwise"
  bottom: "res10_conv2"
  top: "res10_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res11_bn"
  type: "BatchNorm"
  bottom: "res10_eletwise"
  top: "res11_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale8"
  type: "Scale"
  bottom: "res11_bn"
  top: "res11_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res11_relu"
  type: "ReLU"
  bottom: "res11_bn"
  top: "res11_bn"
}
layer {
  name: "res11_conv1"
  type: "Convolution"
  bottom: "res11_bn"
  top: "res11_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res11_conv1_bn"
  type: "BatchNorm"
  bottom: "res11_conv1"
  top: "res11_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res11_conv1_scale"
  type: "Scale"
  bottom: "res11_conv1"
  top: "res11_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res11_conv1_relu"
  type: "ReLU"
  bottom: "res11_conv1"
  top: "res11_conv1"
}
layer {
  name: "res11_conv2"
  type: "Convolution"
  bottom: "res11_conv1"
  top: "res11_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res11_eletwise"
  type: "Eltwise"
  bottom: "res10_eletwise"
  bottom: "res11_conv2"
  top: "res11_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res12_bn"
  type: "BatchNorm"
  bottom: "res11_eletwise"
  top: "res12_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale9"
  type: "Scale"
  bottom: "res12_bn"
  top: "res12_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res12_relu"
  type: "ReLU"
  bottom: "res12_bn"
  top: "res12_bn"
}
layer {
  name: "res12_conv1"
  type: "Convolution"
  bottom: "res12_bn"
  top: "res12_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res12_conv1_bn"
  type: "BatchNorm"
  bottom: "res12_conv1"
  top: "res12_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res12_conv1_scale"
  type: "Scale"
  bottom: "res12_conv1"
  top: "res12_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res12_conv1_relu"
  type: "ReLU"
  bottom: "res12_conv1"
  top: "res12_conv1"
}
layer {
  name: "res12_conv2"
  type: "Convolution"
  bottom: "res12_conv1"
  top: "res12_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res12_eletwise"
  type: "Eltwise"
  bottom: "res11_eletwise"
  bottom: "res12_conv2"
  top: "res12_eletwise"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "res13_bn"
  type: "BatchNorm"
  bottom: "res12_eletwise"
  top: "res13_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale10"
  type: "Scale"
  bottom: "res13_bn"
  top: "res13_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res13_relu"
  type: "ReLU"
  bottom: "res13_bn"
  top: "res13_bn"
}
layer {
  name: "res13_conv1"
  type: "Convolution"
  bottom: "res13_bn"
  top: "res13_conv1"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res13_conv1_bn"
  type: "BatchNorm"
  bottom: "res13_conv1"
  top: "res13_conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res13_conv1_scale"
  type: "Scale"
  bottom: "res13_conv1"
  top: "res13_conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res13_conv1_relu"
  type: "ReLU"
  bottom: "res13_conv1"
  top: "res13_conv1"
}
layer {
  name: "res13_conv2"
  type: "Convolution"
  bottom: "res13_conv1"
  top: "res13_conv2"
  param {
    lr_mult: 0
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res13_eletwise"
  type: "Eltwise"
  bottom: "res12_eletwise"
  bottom: "res13_conv2"
  top: "res13_eletwise"
  eltwise_param {
    operation: SUM
  }
}





#========= RPN ============

  layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "res13_eletwise"
  top: "rpn/output"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
    type: "ReLU"
    bottom: "rpn/output"
    top: "rpn/output"
    }

layer {
  name: "rpn_cls_score"
    type: "Convolution"
    bottom: "rpn/output"
    top: "rpn_cls_score"
    param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
      kernel_size: 1 pad: 0 stride: 1
      weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_bbox_pred"
    type: "Convolution"
    bottom: "rpn/output"
    top: "rpn_bbox_pred"
    param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
      kernel_size: 1 pad: 0 stride: 1
      weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  bottom: "rpn_cls_score"
    top: "rpn_cls_score_reshape"
    name: "rpn_cls_score_reshape"
    type: "Reshape"
    reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

layer {
  name: 'rpn-data'
    type: 'Python'
    bottom: 'rpn_cls_score'
    bottom: 'gt_boxes'
    bottom: 'im_info'
    bottom: 'data'
    top: 'rpn_labels'
    top: 'rpn_bbox_targets'
    top: 'rpn_bbox_inside_weights'
    top: 'rpn_bbox_outside_weights'
    python_param {
    module: 'rpn.anchor_target_layer'
      layer: 'AnchorTargetLayer'
      param_str: "'feat_stride': 16"
      }
}

layer {
  name: "rpn_loss_cls"
    type: "SoftmaxWithLoss"
    bottom: "rpn_cls_score_reshape"
    bottom: "rpn_labels"
    propagate_down: 1
    propagate_down: 0
    top: "rpn_cls_loss"
    loss_weight: 1
    loss_param {
    ignore_label: -1
      normalize: true
      }
}

layer {
  name: "rpn_loss_bbox"
    type: "SmoothL1Loss"
    bottom: "rpn_bbox_pred"
    bottom: "rpn_bbox_targets"
    bottom: 'rpn_bbox_inside_weights'
    bottom: 'rpn_bbox_outside_weights'
    top: "rpn_loss_bbox"
    loss_weight: 1
    smooth_l1_loss_param { sigma: 3.0 }
}



#====================>


#========= RCNN ============
# Dummy layers so that initial parameters are saved into the output net

  layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    shape { dim: 1 dim: 256 dim: 28 dim: 28 }
    data_filler { type: "constant" value: 0  }
  }
}


#######################=>
  layer {
    name: "res14_bn"
    type: "BatchNorm"
  bottom: "dummy_roi_pool_conv5"
  top: "res14_bn"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "res14_scale"
  type: "Scale"
  bottom: "res14_bn"
  top: "res14_bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "res14_relu"
  type: "ReLU"
  bottom: "res14_bn"
  top: "res14_bn"
}
layer {
  name: "res14_conv1"
  type: "Convolution"
  bottom: "res14_bn"
  top: "res14_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
      stride: 2
      weight_filler {
      type: "xavier"
	std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res14_conv1_bn"
    type: "BatchNorm"
    bottom: "res14_conv1"
    top: "res14_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res14_conv1_scale"
    type: "Scale"
    bottom: "res14_conv1"
    top: "res14_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res14_conv1_relu"
    type: "ReLU"
    bottom: "res14_conv1"
    top: "res14_conv1"
    }
layer {
  name: "res14_conv2"
    type: "Convolution"
    bottom: "res14_conv1"
    top: "res14_conv2"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0
}
  }
}
layer {
  name: "res14_match_conv"
    type: "Convolution"
    bottom: "dummy_roi_pool_conv5"
    top: "res14_match_conv"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 0
      kernel_size: 1
      stride: 2
      weight_filler {
      type: "xavier"
std: 0.01
}
    bias_filler {
      type: "constant"
value: 0.2
}
  }
}
layer {
  name: "res14_match_bn"
    type: "BatchNorm"
    bottom: "res14_match_conv"
    top: "res14_match_conv"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res14_match_scale"
    type: "Scale"
    bottom: "res14_match_conv"
    top: "res14_match_conv"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res14_eletwise"
    type: "Eltwise"
    bottom: "res14_match_conv"
    bottom: "res14_conv2"
    top: "res14_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res15_bn"
    type: "BatchNorm"
    bottom: "res14_eletwise"
    top: "res15_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale11"
    type: "Scale"
    bottom: "res15_bn"
    top: "res15_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res15_relu"
    type: "ReLU"
    bottom: "res15_bn"
    top: "res15_bn"
    }
layer {
  name: "res15_conv1"
    type: "Convolution"
    bottom: "res15_bn"
    top: "res15_conv1"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res15_conv1_bn"
    type: "BatchNorm"
    bottom: "res15_conv1"
    top: "res15_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res15_conv1_scale"
    type: "Scale"
    bottom: "res15_conv1"
    top: "res15_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res15_conv1_relu"
    type: "ReLU"
    bottom: "res15_conv1"
    top: "res15_conv1"
    }
layer {
  name: "res15_conv2"
    type: "Convolution"
    bottom: "res15_conv1"
    top: "res15_conv2"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res15_eletwise"
    type: "Eltwise"
    bottom: "res14_eletwise"
    bottom: "res15_conv2"
    top: "res15_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "res16_bn"
    type: "BatchNorm"
    bottom: "res15_eletwise"
    top: "res16_bn"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "Scale12"
    type: "Scale"
    bottom: "res16_bn"
    top: "res16_bn"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res16_relu"
    type: "ReLU"
    bottom: "res16_bn"
    top: "res16_bn"
    }
layer {
  name: "res16_conv1"
    type: "Convolution"
    bottom: "res16_bn"
    top: "res16_conv1"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res16_conv1_bn"
    type: "BatchNorm"
    bottom: "res16_conv1"
    top: "res16_conv1"
    batch_norm_param {
    use_global_stats: false
      }
}
layer {
  name: "res16_conv1_scale"
    type: "Scale"
    bottom: "res16_conv1"
    top: "res16_conv1"
    scale_param {
    bias_term: true
      }
}
layer {
  name: "res16_conv1_relu"
    type: "ReLU"
    bottom: "res16_conv1"
    top: "res16_conv1"
    }
layer {
  name: "res16_conv2"
    type: "Convolution"
    bottom: "res16_conv1"
    top: "res16_conv2"
    param {
    lr_mult: 1
      decay_mult: 1
      }
  param {
    lr_mult: 2
      decay_mult: 0
      }
  convolution_param {
    num_output: 512
      pad: 1
      kernel_size: 3
      stride: 1
      weight_filler {
      type: "xavier"
	std: 0.01
	}
    bias_filler {
      type: "constant"
	value: 0
	}
  }
}
layer {
  name: "res16_eletwise"
    type: "Eltwise"
    bottom: "res15_eletwise"
    bottom: "res16_conv2"
    top: "res16_eletwise"
    eltwise_param {
    operation: SUM
      }
}
layer {
  name: "pool5"
    type: "Pooling"
    bottom: "res16_eletwise"
    top: "pool5"
    pooling_param {
    pool: AVE
      kernel_size: 7
      stride: 1
      }
}



layer {
  name: "silence_fc7"
    type: "Silence"
    bottom: "pool5"
    }

